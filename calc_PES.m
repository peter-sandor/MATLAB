function data_out = calc_PES(pic,center,input)
% This function calculates the photoelectron spectrum 'lnte' and the
% corresponding energy axis 'nrg'. The relevant sizes are [Nrad x Ntheta]
% and [Nrad x 1], respectively. The input image size is [2*Nrad x 2*Nrad].
% Input parameters: 'pic' - raw image
%                   'center' - center coordinates [x y] a.k.a. [column row]
%                   'ke' - pixel to energy conversion coefficient: E = ke*pixel^2
% pic has to have the size [360x360]
if isstruct(input)
    if isfield(input,'Ntheta')
        Ntheta=input.Ntheta;
    else
        Ntheta=12;
    end
    if isfield(input,'Nrad')
        Nrad=input.Nrad;
    else
        Nrad=180;
    end
    ke=input.ke;
else
    ke=input;
    Ntheta=12;
    Nrad=180;
end

imgsize=[360 360];
Ninv=imgsize(1); % this size has to be twice as much as the relevant size of the inversion matrices 'A' and 'B'(generated by T_Gen)
% Nrad=ceil(Ninv/2);
load 'D:\users\peter\matlab_codes\invabel_sean\180\basis1.mat';
%% Symmetrize image
unfolded=unfoldimage(foldimage(pic,center),4);
N=size(unfolded);
symmetrized=zeros(imgsize);
symmetrized(round((imgsize(1)-N(1))/2)+1:imgsize(1)-round((imgsize(1)-N(1))/2),round((imgsize(2)-N(2))/2)+1:imgsize(2)-round((imgsize(2)-N(2))/2))=unfolded;
center=[round(Ninv/2) round(Ninv/2)];
%% Abel-invert symmetrized image using BASEX method
[invimg,sfactor1]=Inv_Abel(squeeze(symmetrized),center,Ninv,basis1);
%% Apply Jacobian, calculate lineouts in momentum space
rho=map2colvec(abs(-(Ninv/2-1):Ninv/2))*ones([1 Ninv]);
invimgrho=squeeze(invimg).*rho;
[lnta,Rbins]=sectorize(squeeze(invimgrho),center,Ntheta,Nrad,0,1,0,'minrad');
[lnte2,nrg2]=sectorize(squeeze(invimgrho),center,Ntheta,Nrad,0,0,ke,'minrad');
%% Convert lineouts to energy space (rescale x and y axes)
nrg=map2colvec(ke/sfactor1^2*Rbins.^2);
lnte=lnta./extend(sqrt(nrg),size(lnta,2));
data_out.symmetrized=symmetrized;
data_out.invimg=invimg;
data_out.nrg=nrg;
data_out.lnte=lnte;
data_out.nrg2=nrg2;
data_out.lnte2=lnte2;

% save lnte_BASEX.mat lnte 
% save nrg_BASEX.mat nrg
end

